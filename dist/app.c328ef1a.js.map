{"version":3,"sources":["node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/core/Camera.js","node_modules/ogl/src/math/functions/Mat3Func.js","node_modules/ogl/src/math/Mat3.js","node_modules/ogl/src/core/Mesh.js","node_modules/ogl/src/core/Texture.js","node_modules/ogl/src/core/RenderTarget.js","node_modules/ogl/src/math/functions/ColorFunc.js","node_modules/ogl/src/math/Color.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/math/Vec2.js","node_modules/ogl/src/math/Vec4.js","node_modules/ogl/src/extras/Plane.js","node_modules/ogl/src/extras/Box.js","node_modules/ogl/src/extras/Sphere.js","node_modules/ogl/src/extras/Cylinder.js","node_modules/ogl/src/extras/Triangle.js","node_modules/ogl/src/extras/Torus.js","node_modules/ogl/src/extras/Orbit.js","node_modules/ogl/src/extras/Raycast.js","node_modules/ogl/src/extras/Curve.js","node_modules/ogl/src/extras/Post.js","node_modules/ogl/src/extras/Animation.js","node_modules/ogl/src/extras/Skin.js","node_modules/ogl/src/extras/Text.js","node_modules/ogl/src/extras/NormalProgram.js","node_modules/ogl/src/extras/Flowmap.js","node_modules/ogl/src/extras/GPGPU.js","node_modules/ogl/src/extras/Polyline.js","node_modules/ogl/src/extras/Shadow.js","node_modules/ogl/src/extras/KTXTexture.js","node_modules/ogl/src/extras/TextureLoader.js","node_modules/ogl/src/extras/GLTFAnimation.js","node_modules/ogl/src/extras/GLTFSkin.js","node_modules/ogl/src/extras/GLTFLoader.js","node_modules/ogl/src/index.mjs","app.js","C:/Users/Rahul/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","scaleRotateMat4","transformMat3","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Array","constructor","v","Vec3Func","va","vb","sub","squaredLen","equals","applyMatrix4","mat4","scaleRotateMatrix4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","numLoc","i","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPosition","position","computeBoundingBox","array","bounds","center","radius","Infinity","l","computeBoundingSphere","maxRadiusSq","remove","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","programActive","currentProgram","useProgram","activeUniform","undefined","texture","update","setUniform","textureUnits","push","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","Renderer","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","fromMatrix3","matrix3","fromAxisAngle","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","hypot","c","b12","b20","b21","b22","abs","mat","getScaling","getMaxScaleOnAxis","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","compose","pos","lookAt","fromRotationMatrix","asin","atan2","tmpMat4","Euler","reorder","EulerFunc","Transform","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","arguments","toLowerCase","Color","isArray","ColorFunc","r","g","transformMat2","transformMat2d","Vec2","Vec2Func","applyMatrix3","mat3","Vec4","Vec4Func","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","Box","depthSegments","dSegs","Sphere","ceil","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","te","grid","n","vRow","Cylinder","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addHeight","addCap","slope","indexRow","theta","sinTheta","cosTheta","isTop","sign","centerIndex","Triangle","Torus","tube","tubularSegments","arc","vertices","normals","uvs","indices","idx","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","mouseButtons","ORBIT","ZOOM","getZoomScale","pow","panLeft","panUp","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","dolly","dollyScale","handleMoveRotate","handleMouseMoveDolly","e","clientX","clientY","handleMovePan","handleTouchStartDollyPan","dx","touches","pageX","dy","pageY","handleTouchMoveDollyPan","onMouseDown","button","window","addEventListener","onMouseMove","onMouseUp","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","onTouchMove","onTouchEnd","onContextMenu","addHandlers","passive","tempVec2c","tempVec3c","tempVec3d","tempVec3e","tempVec3f","tempVec3g","tempVec3h","tempVec3i","tempVec3j","tempVec3k","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","output","invWorldMat4","hits","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","point","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","end","ai","bi","ci","intersectTriangle","localFaceNormal","localNormal","getBarycoord","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","DdN","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","CATMULLROM","CUBICBEZIER","QUADRATICBEZIER","_a0","_a1","_a2","_a3","getCtrlPoint","points","last","getQuadraticBezierPoint","p0","c0","p1","ret","getCubicBezierPoint","c1","Curve","divisions","_getQuadraticBezierPoints","p","_getCubicBezierPoints","_getCatmullRomPoints","pop","getPoints","Post","targetOnly","options","passes","fbo","read","write","swap","resize","addPass","defaultVertex","defaultFragment","textureUniform","pass","floor","enabledPasses","filter","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","blend","prevKey","nextKey","Skin","rig","createBones","createBoneTexture","animations","boneTexture","boneTextureSize","root","bones","bone","bindPose","bindInverse","log","LN2","boneMatrices","RGBA32F","addAnimation","animation","total","Text","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","fontHeight","baseline","newline","whitespace","parseFont","createGeometry","chars","char","common","base","replace","numChars","layout","cursor","wordCursor","wordWidth","line","newLine","maxTimes","test","glyph","prevGlyph","kern","getKernPairOffset","advance","xadvance","numGlyphs","populateBuffers","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","map","id1","id2","kernings","first","second","amount","NormalProgram","Flowmap","falloff","dissipation","mask","createFBOs","velocity","initProgram","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","GPGPU","initialData","dataLength","coords","floatArray","tmp","Polyline","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","Shadow","light","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","BYTES_PER_ELEMENT","head","DataView","littleEndian","getUint32","glType","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","cache","supportedExtensions","TextureLoader","load","support","getSupportedExtensions","ext","prop","includes","cacheID","loaded","loadKTX","loadImage","pvrtc","s3tc","etc","etc1","astc","detectWebP","fetch","then","res","arrayBuffer","decodeImage","imgBmp","powerOfTwo","close","clearCache","toDataURL","log2","Promise","resolve","img","Image","crossOrigin","isChrome","navigator","userAgent","createImageBitmap","onload","imageOrientation","tmpVec3A","tmpVec3B","tmpVec3C","tmpVec3D","tmpQuatA","tmpQuatB","tmpQuatC","tmpQuatD","GLTFAnimation","loop","startTime","reduce","times","endTime","transform","interpolation","values","prevIndex","findIndex","nextIndex","prevVal","prevTan","nextTan","nextVal","cubicSplineInterpolate","t2","t3","s2","s3","s0","s1","GLTFSkin","skeleton","joints","updateUniforms","_worldMatrix","TYPE_ARRAY","Int16Array","TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ATTRIBUTES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","TRANSFORMS","translation","GLTFLoader","dir","desc","parseDesc","parse","asset","version","loadBuffers","bufferViews","parseBufferViews","images","parseImages","parseTextures","materials","parseMaterials","skins","parseSkins","parseMeshes","nodes","parseNodes","populateSkins","parseAnimations","scenes","parseScenes","json","glb","unpackGLB","header","Error","jsonChunkHeader","jsonByteOffset","jsonByteLength","jsonText","TextDecoder","decode","JSON","binaryChunkHeader","binaryByteOffset","binaryByteLength","binary","resolveURI","uri","all","primitives","accessors","bufferView","isAttribute","componentType","mimeType","bufferIndex","byteOffset","byteStride","extras","TypeArray","elementBytes","originalBuffer","bufferViewIndex","blob","Blob","URL","createObjectURL","ready","sampler","samplerIndex","source","sourceIndex","samplers","pbrMetallicRoughness","normalTexture","occlusionTexture","emissiveTexture","emissiveFactor","alphaMode","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","inverseBindMatrices","parseAccessor","weights","meshIndex","numInstances","skinIndex","skin","parsePrimitives","material","materialIndex","targets","gltfMaterial","sparse","bufferByteOffset","componentOffset","componentStride","isInterleaved","newData","isFirstInstance","instanceCount","instanceMatrix","childIndex","joint","channels","input","inputIndex","outputIndex","nodeIndex","path","nodesIndices","appendChild","clearColor","controls","innerWidth","innerHeight","planeGeometry","sphereGeometry","cubeGeometry","cylinderGeometry","cube","cylinder","requestAnimationFrame","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","handled","assets","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","some","cb"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) {\n            this.gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n        }\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","// TODO: multi target rendering\n// TODO: test stencil and depth\n// TODO: destroy\n// TODO: blit on resize?\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0, 1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth, height, dSegs, wSegs, 0, 2, 1, 1, 1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, wSegs, 0, 2, 1, 1, -1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i, ii);\n        i += (wSegs + 1) * (hSegs + 1);\n        ii += wSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, 0, 1, 2, 1, -1, i, ii);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(\n        gl,\n        {\n            radiusTop = 0.5,\n            radiusBottom = 0.5,\n            height = 1,\n            radialSegments = 8,\n            heightSegments = 1,\n            openEnded = false,\n            thetaStart = 0,\n            thetaLength = Math.PI * 2,\n            attributes = {},\n        } = {}\n    ) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3);\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js\n\nimport { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Torus extends Geometry {\n    constructor(gl, { radius = 0.5, tube = 0.2, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2, attributes = {} } = {}) {\n        const num = (radialSegments + 1) * (tubularSegments + 1);\n        const numIndices = radialSegments * tubularSegments * 6;\n\n        const vertices = new Float32Array(num * 3);\n        const normals = new Float32Array(num * 3);\n        const uvs = new Float32Array(num * 2);\n        const indices = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        const center = new Vec3();\n        const vertex = new Vec3();\n        const normal = new Vec3();\n\n        // generate vertices, normals and uvs\n        let idx = 0;\n        for (let j = 0; j <= radialSegments; j++) {\n            for (let i = 0; i <= tubularSegments; i++, idx++) {\n                const u = (i / tubularSegments) * arc;\n                const v = (j / radialSegments) * Math.PI * 2;\n\n                // vertex\n                vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n                vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n                vertex.z = tube * Math.sin(v);\n\n                vertices.set([vertex.x, vertex.y, vertex.z], idx * 3);\n\n                // normal\n                center.x = radius * Math.cos(u);\n                center.y = radius * Math.sin(u);\n                normal.sub(vertex, center).normalize();\n\n                normals.set([normal.x, normal.y, normal.z], idx * 3);\n\n                // uv\n                uvs.set([i / tubularSegments, j / radialSegments], idx * 2);\n            }\n        }\n\n        // generate indices\n        idx = 0;\n        for (let j = 1; j <= radialSegments; j++) {\n            for (let i = 1; i <= tubularSegments; i++, idx++) {\n                // indices\n                const a = (tubularSegments + 1) * j + i - 1;\n                const b = (tubularSegments + 1) * (j - 1) + i - 1;\n                const c = (tubularSegments + 1) * (j - 1) + i;\n                const d = (tubularSegments + 1) * j + i;\n\n                // faces\n                indices.set([a, b, d, b, c, d], idx * 6);\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: vertices },\n            normal: { size: 3, data: normals },\n            uv: { size: 2, data: uvs },\n            index: { data: indices },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    function dolly(dollyScale) {\n        sphericalDelta.radius /= dollyScale;\n    }\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// TODO: barycentric code shouldn't be here, but where?\n// TODO: SphereCast?\n\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\nconst tempVec2c = new Vec2();\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempVec3d = new Vec3();\nconst tempVec3e = new Vec3();\nconst tempVec3f = new Vec3();\nconst tempVec3g = new Vec3();\nconst tempVec3h = new Vec3();\nconst tempVec3i = new Vec3();\nconst tempVec3j = new Vec3();\nconst tempVec3k = new Vec3();\n\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor() {\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const { left, right, bottom, top, zoom } = camera;\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = output;\n        hits.length = 0;\n\n        meshes.forEach((mesh) => {\n            // Create bounds\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n            const bounds = mesh.geometry.bounds;\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            // Break out early if bounds too far away from origin\n            if (maxDistance) {\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\n            }\n\n            let localDistance = 0;\n\n            // Check origin isn't inside bounds before testing intersection\n            if (mesh.geometry.raycast === 'sphere') {\n                if (origin.distance(bounds.center) > bounds.radius) {\n                    localDistance = this.intersectSphere(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            } else {\n                if (\n                    origin.x < bounds.min.x ||\n                    origin.x > bounds.max.x ||\n                    origin.y < bounds.min.y ||\n                    origin.y > bounds.max.y ||\n                    origin.z < bounds.min.z ||\n                    origin.z > bounds.max.z\n                ) {\n                    localDistance = this.intersectBox(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            }\n\n            if (maxDistance && localDistance > localMaxDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\n        // Test bounds first before testing geometry\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\n        if (!hits.length) return hits;\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n        const a = tempVec3c;\n        const b = tempVec3d;\n        const c = tempVec3e;\n        const closestFaceNormal = tempVec3f;\n        const faceNormal = tempVec3g;\n        const barycoord = tempVec3h;\n        const uvA = tempVec2a;\n        const uvB = tempVec2b;\n        const uvC = tempVec2c;\n\n        for (let i = hits.length - 1; i >= 0; i--) {\n            const mesh = hits[i];\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            let closestA, closestB, closestC;\n\n            const geometry = mesh.geometry;\n            const attributes = geometry.attributes;\n            const index = attributes.index;\n\n            const start = Math.max(0, geometry.drawRange.start);\n            const end = Math.min(index ? index.count : attributes.position.count, geometry.drawRange.start + geometry.drawRange.count);\n\n            for (let j = start; j < end; j += 3) {\n                // Position attribute indices for each triangle\n                const ai = index ? index.data[j] : j;\n                const bi = index ? index.data[j + 1] : j + 1;\n                const ci = index ? index.data[j + 2] : j + 2;\n\n                a.fromArray(attributes.position.data, ai * 3);\n                b.fromArray(attributes.position.data, bi * 3);\n                c.fromArray(attributes.position.data, ci * 3);\n\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\n                if (!distance) continue;\n\n                // Too far away\n                if (maxDistance && distance > localMaxDistance) continue;\n\n                if (!localDistance || distance < localDistance) {\n                    localDistance = distance;\n                    closestA = ai;\n                    closestB = bi;\n                    closestC = ci;\n                    closestFaceNormal.copy(faceNormal);\n                }\n            }\n\n            if (!localDistance) hits.splice(i, 1);\n\n            // Update hit values from bounds-test\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            // Add unique hit objects on mesh to avoid generating lots of objects\n            if (!mesh.hit.faceNormal) {\n                mesh.hit.localFaceNormal = new Vec3();\n                mesh.hit.faceNormal = new Vec3();\n                mesh.hit.uv = new Vec2();\n                mesh.hit.localNormal = new Vec3();\n                mesh.hit.normal = new Vec3();\n            }\n\n            // Add face normal data which is already computed\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\n\n            // Optional data, opt out to optimise a bit if necessary\n            if (includeUV || includeNormal) {\n                // Calculate barycoords to find uv values at hit point\n                a.fromArray(attributes.position.data, closestA * 3);\n                b.fromArray(attributes.position.data, closestB * 3);\n                c.fromArray(attributes.position.data, closestC * 3);\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\n            }\n\n            if (includeUV && attributes.uv) {\n                uvA.fromArray(attributes.uv.data, closestA * 2);\n                uvB.fromArray(attributes.uv.data, closestB * 2);\n                uvC.fromArray(attributes.uv.data, closestC * 2);\n                mesh.hit.uv.set(\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\n                );\n            }\n\n            if (includeNormal && attributes.normal) {\n                a.fromArray(attributes.normal.data, closestA * 3);\n                b.fromArray(attributes.normal.data, closestB * 3);\n                c.fromArray(attributes.normal.data, closestC * 3);\n                mesh.hit.localNormal.set(\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\n                );\n\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\n            }\n        }\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return 0;\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n        if (t0 < 0 && t1 < 0) return 0;\n        if (t0 < 0) return t1;\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n        const min = box.min;\n        const max = box.max;\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n        if (tmin > tYmax || tYmin > tmax) return 0;\n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n        if (tmin > tZmax || tZmin > tmax) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n        if (tmax < 0) return 0;\n        return tmin >= 0 ? tmin : tmax;\n    }\n\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        const edge1 = tempVec3h;\n        const edge2 = tempVec3i;\n        const diff = tempVec3j;\n        edge1.sub(b, a);\n        edge2.sub(c, a);\n        normal.cross(edge1, edge2);\n        let DdN = direction.dot(normal);\n        if (!DdN) return 0;\n        let sign;\n        if (DdN > 0) {\n            if (backfaceCulling) return 0;\n            sign = 1;\n        } else {\n            sign = -1;\n            DdN = -DdN;\n        }\n        diff.sub(origin, a);\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\n        if (DdQxE2 < 0) return 0;\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\n        if (DdE1xQ < 0) return 0;\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\n        let QdN = -sign * diff.dot(normal);\n        if (QdN < 0) return 0;\n        return QdN / DdN;\n    }\n\n    getBarycoord(point, a, b, c, target = tempVec3h) {\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\n        // static/instance method to calculate barycentric coordinates\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n        const v0 = tempVec3i;\n        const v1 = tempVec3j;\n        const v2 = tempVec3k;\n        v0.sub(c, a);\n        v1.sub(b, a);\n        v2.sub(point, a);\n        const dot00 = v0.dot(v0);\n        const dot01 = v0.dot(v1);\n        const dot02 = v0.dot(v2);\n        const dot11 = v1.dot(v1);\n        const dot12 = v1.dot(v2);\n        const denom = dot00 * dot11 - dot01 * dot01;\n        if (denom === 0) return target.set(-2, -1, -1);\n        const invDenom = 1 / denom;\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n        return target.set(1 - u - v, v, u);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\nconst CATMULLROM = 'catmullrom';\nconst CUBICBEZIER = 'cubicbezier';\nconst QUADRATICBEZIER = 'quadraticbezier';\n\n// temp\nconst _a0 = new Vec3(),\n    _a1 = new Vec3(),\n    _a2 = new Vec3(),\n    _a3 = new Vec3();\n\n/**\n * Get the control points of cubic bezier curve.\n * @param {*} i\n * @param {*} a\n * @param {*} b\n */\nfunction getCtrlPoint(points, i, a = 0.168, b = 0.168) {\n    if (i < 1) {\n        _a0.sub(points[1], points[0]).scale(a).add(points[0]);\n    } else {\n        _a0.sub(points[i + 1], points[i - 1])\n            .scale(a)\n            .add(points[i]);\n    }\n    if (i > points.length - 3) {\n        const last = points.length - 1;\n        _a1.sub(points[last - 1], points[last])\n            .scale(b)\n            .add(points[last]);\n    } else {\n        _a1.sub(points[i], points[i + 2])\n            .scale(b)\n            .add(points[i + 1]);\n    }\n    return [_a0.clone(), _a1.clone()];\n}\n\nfunction getQuadraticBezierPoint(t, p0, c0, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 2);\n    _a1.copy(c0).scale(2 * k * t);\n    _a2.copy(p1).scale(t ** 2);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2);\n    return ret;\n}\n\nfunction getCubicBezierPoint(t, p0, c0, c1, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 3);\n    _a1.copy(c0).scale(3 * k ** 2 * t);\n    _a2.copy(c1).scale(3 * k * t ** 2);\n    _a3.copy(p1).scale(t ** 3);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2).add(_a3);\n    return ret;\n}\n\nexport class Curve {\n    constructor({ points = [new Vec3(0, 0, 0), new Vec3(0, 1, 0), new Vec3(1, 1, 0), new Vec3(1, 0, 0)], divisions = 12, type = CATMULLROM } = {}) {\n        this.points = points;\n        this.divisions = divisions;\n        this.type = type;\n    }\n\n    _getQuadraticBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 3) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        const p0 = this.points[0];\n        let c0 = this.points[1],\n            p1 = this.points[2];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n            points.push(p);\n        }\n\n        let offset = 3;\n        while (count - offset > 0) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c0);\n            p1 = this.points[offset];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n                points.push(p);\n            }\n            offset++;\n        }\n\n        return points;\n    }\n\n    _getCubicBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 4) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        let p0 = this.points[0],\n            c0 = this.points[1],\n            c1 = this.points[2],\n            p1 = this.points[3];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n            points.push(p);\n        }\n\n        let offset = 4;\n        while (count - offset > 1) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c1);\n            c1 = this.points[offset];\n            p1 = this.points[offset + 1];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n                points.push(p);\n            }\n            offset += 2;\n        }\n\n        return points;\n    }\n\n    _getCatmullRomPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count <= 2) {\n            return this.points;\n        }\n\n        let p0;\n        this.points.forEach((p, i) => {\n            if (i === 0) {\n                p0 = p;\n            } else {\n                const [c0, c1] = getCtrlPoint(this.points, i - 1, a, b);\n                const c = new Curve({\n                    points: [p0, c0, c1, p],\n                    type: CUBICBEZIER,\n                });\n                points.pop();\n                points.push(...c.getPoints(divisions));\n                p0 = p;\n            }\n        });\n\n        return points;\n    }\n\n    getPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const type = this.type;\n\n        if (type === QUADRATICBEZIER) {\n            return this._getQuadraticBezierPoints(divisions);\n        }\n\n        if (type === CUBICBEZIER) {\n            return this._getCubicBezierPoints(divisions);\n        }\n\n        if (type === CATMULLROM) {\n            return this._getCatmullRomPoints(divisions, a, b);\n        }\n\n        return this.points;\n    }\n}\n\nCurve.CATMULLROM = CATMULLROM;\nCurve.CUBICBEZIER = CUBICBEZIER;\nCurve.QUADRATICBEZIER = QUADRATICBEZIER;\n","// TODO: Destroy render targets if size changed and exists\n\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Post {\n    constructor(\n        gl,\n        {\n            width,\n            height,\n            dpr,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = gl.LINEAR,\n            geometry = new Triangle(gl),\n            targetOnly = null,\n        } = {}\n    ) {\n        this.gl = gl;\n\n        this.options = { wrapS, wrapT, minFilter, magFilter };\n\n        this.passes = [];\n\n        this.geometry = geometry;\n\n        this.uniform = { value: null };\n        this.targetOnly = targetOnly;\n\n        const fbo = (this.fbo = {\n            read: null,\n            write: null,\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        });\n\n        this.resize({ width, height, dpr });\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = { value: this.fbo.read.texture };\n\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({ width, height, dpr } = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) {\n            this.width = width;\n            this.height = height || width;\n        }\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        width = Math.floor((this.width || this.gl.renderer.width) * dpr);\n        height = Math.floor((this.height || this.gl.renderer.height) * dpr);\n\n        this.options.width = width;\n        this.options.height = height;\n\n        this.fbo.read = new RenderTarget(this.gl, this.options);\n        this.fbo.write = new RenderTarget(this.gl, this.options);\n    }\n\n    // Uses same arguments as renderer.render, with addition of optional texture passed in to avoid scene render\n    render({ scene, camera, texture, target = null, update = true, sort = true, frustumCull = true }) {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        if (!texture) {\n            this.gl.renderer.render({\n                scene,\n                camera,\n                target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n                update,\n                sort,\n                frustumCull,\n            });\n            this.fbo.swap();\n        }\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = !i && texture ? texture : this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: true,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst prevPos = new Vec3();\nconst prevRot = new Quat();\nconst prevScl = new Vec3();\n\nconst nextPos = new Vec3();\nconst nextRot = new Quat();\nconst nextScl = new Vec3();\n\nexport class Animation {\n    constructor({ objects, data }) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3);\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\nimport { Animation } from './Animation.js';\n\nconst tempMat4 = new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, { rig, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: { value: this.boneTexture },\n            boneTextureSize: { value: this.boneTextureSize },\n        });\n    }\n\n    createBones(rig) {\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n\n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3);\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        }\n\n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach((bone) => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({ objects: this.bones, data });\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach((animation) => (total += animation.weight));\n\n        this.animations.forEach((animation, i) => {\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({ camera } = {}) {\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({ camera });\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach((d) => (glyphs[d.char] = d));\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id[i] = i;\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char] || glyphs[' '];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                    // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n            // Reset infinite loop catch\n            count = 0;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([x, y - h, 0, x, y, 0, x + w, y - h, 0, x + w, y, 0], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([u, v - vh, u, v, u + uw, v - vh, u + uw, v], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n        _this.width = Math.max(...lines.map((line) => line.width));\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function (options) {\n        ({ width } = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function (options) {\n        ({ text } = options);\n        createGeometry();\n    };\n}\n","import { Program } from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}\n","import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Flowmap {\n    constructor(\n        gl,\n        {\n            size = 128, // default size of the render targets\n            falloff = 0.3, // size of the stamp, percentage of the size\n            alpha = 1, // opacity of the stamp\n            dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        } = {}\n    ) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = { value: null };\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        };\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size,\n                height: size,\n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: { value: falloff * 0.5 },\n                        uAlpha: { value: alpha },\n                        uDissipation: { value: dissipation },\n\n                        // User needs to update these\n                        uAspect: { value: 1 },\n                        uMouse: { value: _this.mouse },\n                        uVelocity: { value: _this.velocity },\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;\n","import { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Texture } from '../core/Texture.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class GPGPU {\n    constructor(\n        gl,\n        {\n            // Always pass in array of vec4s (RGBA values within texture)\n            data = new Float32Array(16),\n            geometry = new Triangle(gl),\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        }\n    ) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {\n            value: new Texture(gl, {\n                image: floatArray,\n                target: gl.TEXTURE_2D,\n                type: gl.FLOAT,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n                wrapS: gl.CLAMP_TO_EDGE,\n                wrapT: gl.CLAMP_TO_EDGE,\n                generateMipmaps: false,\n                minFilter: gl.NEAREST,\n                magFilter: gl.NEAREST,\n                width: this.size,\n                flipY: false,\n            }),\n        };\n\n        // Create FBOs\n        const options = {\n            width: this.size,\n            height: this.size,\n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","import { Camera } from '../core/Camera.js';\nimport { Program } from '../core/Program.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, { light = new Camera(gl), width = 1024, height = width }) {\n        this.gl = gl;\n\n        this.light = light;\n\n        this.target = new RenderTarget(gl, { width, height });\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: null,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = { value: this.light.projectionMatrix };\n            mesh.program.uniforms[uniformView] = { value: this.light.viewMatrix };\n            mesh.program.uniforms[uniformTexture] = { value: this.target.texture };\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(this.gl, {\n            vertex,\n            fragment,\n            cullFace: null,\n        });\n    }\n\n    render({ scene }) {\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                node.isForceVisibility = node.visible;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene,\n            camera: this.light,\n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                node.visible = node.isForceVisibility;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;\n","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, { buffer, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, anisotropy = 0, minFilter, magFilter } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n            minFilter,\n            magFilter,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n\n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        if (ktx.numberOfMipmapLevels > 1) {\n            if (this.minFilter === this.gl.LINEAR) this.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        } else {\n            if (this.minFilter === this.gl.NEAREST_MIPMAP_LINEAR) this.minFilter = this.gl.LINEAR;\n        }\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n}\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++) if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nlet cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(\n        gl,\n        {\n            src, // string or object of extension:src key-values\n            // {\n            //     pvrtc: '...ktx',\n            //     s3tc: '...ktx',\n            //     etc: '...ktx',\n            //     etc1: '...ktx',\n            //     astc: '...ktx',\n            //     webp: '...webp',\n            //     jpg: '...jpg',\n            //     png: '...png',\n            // }\n\n            // Only props relevant to KTXTexture\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            anisotropy = 0,\n\n            // For regular images\n            format = gl.RGBA,\n            internalFormat = format,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = true,\n        } = {}\n    ) {\n        const support = this.getSupportedExtensions(gl);\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src.split('.').pop().split('?')[0].toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        // Stringify props\n        const cacheID =\n            src +\n            wrapS +\n            wrapT +\n            anisotropy +\n            format +\n            internalFormat +\n            generateMipmaps +\n            minFilter +\n            magFilter +\n            premultiplyAlpha +\n            unpackAlignment +\n            flipY +\n            gl.renderer.id;\n\n        // Check cache for existing texture\n        if (cache[cacheID]) return cache[cacheID];\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    minFilter,\n                    magFilter,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n        cache[cacheID] = texture;\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n            s3tc:\n                gl.renderer.getExtension('WEBGL_compressed_texture_s3tc') ||\n                gl.renderer.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||\n                gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'),\n            etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Check for WebP support\n        if (detectWebP) supportedExtensions.push('webp');\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then((res) => res.arrayBuffer())\n            .then((buffer) => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture) {\n        return decodeImage(src).then((imgBmp) => {\n            // Catch non POT textures and update params to avoid errors\n            if (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height)) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n\n            return imgBmp;\n        });\n    }\n\n    static clearCache() {\n        cache = {};\n    }\n}\n\nfunction detectWebP() {\n    return document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0;\n}\n\nfunction powerOfTwo(value) {\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src) {\n    return new Promise((resolve) => {\n        const img = new Image();\n        img.crossOrigin = '';\n        img.src = src;\n\n        // Only chrome's implementation of createImageBitmap is fully supported\n        const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n        if (!!window.createImageBitmap && isChrome) {\n            img.onload = () => {\n                createImageBitmap(img, {\n                    imageOrientation: 'flipY',\n                    premultiplyAlpha: 'none',\n                }).then((imgBmp) => {\n                    resolve(imgBmp);\n                });\n            };\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst tmpVec3A = new Vec3();\nconst tmpVec3B = new Vec3();\nconst tmpVec3C = new Vec3();\nconst tmpVec3D = new Vec3();\n\nconst tmpQuatA = new Quat();\nconst tmpQuatB = new Quat();\nconst tmpQuatC = new Quat();\nconst tmpQuatD = new Quat();\n\nexport class GLTFAnimation {\n    constructor(data, weight = 1) {\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = weight;\n\n        // Set to false to not apply modulo to elapsed against duration\n        this.loop = true;\n\n        // Find starting time as exports from blender (perhaps others too) don't always start from 0\n        this.startTime = data.reduce((a, { times }) => Math.min(a, times[0]), Infinity);\n        // Get largest final time in all channels to calculate duration\n        this.endTime = data.reduce((a, { times }) => Math.max(a, times[times.length - 1]), 0);\n        this.duration = this.endTime - this.startTime;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = (this.loop ? this.elapsed % this.duration : Math.min(this.elapsed, this.duration - 0.001)) + this.startTime;\n\n        this.data.forEach(({ node, transform, interpolation, times, values }) => {\n            // Get index of two time values elapsed is between\n            const prevIndex =\n                Math.max(\n                    1,\n                    times.findIndex((t) => t > elapsed)\n                ) - 1;\n            const nextIndex = prevIndex + 1;\n\n            // Get linear blend/alpha between the two\n            let alpha = (elapsed - times[prevIndex]) / (times[nextIndex] - times[prevIndex]);\n            if (interpolation === 'STEP') alpha = 0;\n\n            let prevVal = tmpVec3A;\n            let prevTan = tmpVec3B;\n            let nextTan = tmpVec3C;\n            let nextVal = tmpVec3D;\n            let size = 3;\n\n            if (transform === 'quaternion') {\n                prevVal = tmpQuatA;\n                prevTan = tmpQuatB;\n                nextTan = tmpQuatC;\n                nextVal = tmpQuatD;\n                size = 4;\n            }\n\n            if (interpolation === 'CUBICSPLINE') {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size * 3 + size * 1);\n                prevTan.fromArray(values, prevIndex * size * 3 + size * 2);\n                nextTan.fromArray(values, nextIndex * size * 3 + size * 0);\n                nextVal.fromArray(values, nextIndex * size * 3 + size * 1);\n\n                // interpolate for final value\n                prevVal = this.cubicSplineInterpolate(alpha, prevVal, prevTan, nextTan, nextVal);\n                if (size === 4) prevVal.normalize();\n            } else {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size);\n                nextVal.fromArray(values, nextIndex * size);\n\n                // interpolate for final value\n                if (size === 4) prevVal.slerp(nextVal, alpha);\n                else prevVal.lerp(nextVal, alpha);\n            }\n\n            // interpolate between multiple possible animations\n            if (size === 4) node[transform].slerp(prevVal, weight);\n            else node[transform].lerp(prevVal, weight);\n        });\n    }\n\n    cubicSplineInterpolate(t, prevVal, prevTan, nextTan, nextVal) {\n        const t2 = t * t;\n        const t3 = t2 * t;\n\n        const s2 = 3 * t2 - 2 * t3;\n        const s3 = t3 - t2;\n        const s0 = 1 - s2;\n        const s1 = s3 - t2 + t;\n\n        for (let i = 0; i < prevVal.length; i++) {\n            prevVal[i] = s0 * prevVal[i] + s1 * (1 - t) * prevTan[i] + s2 * nextVal[i] + s3 * t * nextTan[i];\n        }\n\n        return prevVal;\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\n\nconst tempMat4 = new Mat4();\nconst identity = new Mat4();\n\nexport class GLTFSkin extends Mesh {\n    constructor(gl, { skeleton, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n        this.skeleton = skeleton;\n        this.program = program;\n        this.createBoneTexture();\n        this.animations = [];\n    }\n\n    createBoneTexture() {\n        if (!this.skeleton.joints.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.skeleton.joints.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    // addAnimation(data) {\n    //     const animation = new Animation({ objects: this.bones, data });\n    //     this.animations.push(animation);\n    //     return animation;\n    // }\n\n    // updateAnimations() {\n    //     // Calculate combined animation weight\n    //     let total = 0;\n    //     this.animations.forEach((animation) => (total += animation.weight));\n\n    //     this.animations.forEach((animation, i) => {\n    //         // force first animation to set in order to reset frame\n    //         animation.update(total, i === 0);\n    //     });\n    // }\n\n    updateUniforms() {\n        // Update bone texture\n        this.skeleton.joints.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n    }\n\n    draw({ camera } = {}) {\n        if (!this.program.uniforms.boneTexture) {\n            Object.assign(this.program.uniforms, {\n                boneTexture: { value: this.boneTexture },\n                boneTextureSize: { value: this.boneTextureSize },\n            });\n        }\n\n        this.updateUniforms();\n\n        // Switch the world matrix with identity to ignore any transforms\n        // on the mesh itself - only use skeleton's transforms\n        const _worldMatrix = this.worldMatrix;\n        this.worldMatrix = identity;\n\n        super.draw({ camera });\n\n        // Switch back to leave identity untouched\n        this.worldMatrix = _worldMatrix;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Transform } from '../core/Transform.js';\nimport { Texture } from '../core/Texture.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { GLTFAnimation } from './GLTFAnimation.js';\nimport { GLTFSkin } from './GLTFSkin.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { NormalProgram } from './NormalProgram.js';\n\n// Supports\n// [x] Geometry\n// [ ] Sparse support\n// [x] Nodes and Hierarchy\n// [x] Instancing\n// [ ] Morph Targets\n// [x] Skins\n// [ ] Materials\n// [x] Textures\n// [x] Animation\n// [ ] Cameras\n// [ ] Extensions\n// [x] GLB support\n\n// TODO: Sparse accessor packing? For morph targets basically\n// TODO: init accessor missing bufferView with 0s\n// TODO: morph target animations\n// TODO: what to do if multiple instances are in different groups? Only uses local matrices\n// TODO: what if instancing isn't wanted? Eg collision maps\n// TODO: ie11 fallback for TextDecoder?\n\nconst TYPE_ARRAY = {\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n    'image/jpeg': Uint8Array,\n    'image/png': Uint8Array,\n};\n\nconst TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n};\n\nconst ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n};\n\nconst TRANSFORMS = {\n    translation: 'position',\n    rotation: 'quaternion',\n    scale: 'scale',\n};\n\nexport class GLTFLoader {\n    static async load(gl, src) {\n        const dir = src.split('/').slice(0, -1).join('/') + '/';\n\n        // load main description json\n        const desc = await this.parseDesc(src);\n\n        return await this.parse(gl, desc, dir);\n    }\n\n    static async parse(gl, desc, dir) {\n        if (desc.asset === undefined || desc.asset.version[0] < 2) console.warn('Only GLTF >=2.0 supported. Attempting to parse.');\n\n        // Load buffers async\n        const buffers = await this.loadBuffers(desc, dir);\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        gl.renderer.bindVertexArray(null);\n\n        // Create gl buffers from bufferViews\n        const bufferViews = this.parseBufferViews(gl, desc, buffers);\n\n        // Create images from either bufferViews or separate image files\n        const images = this.parseImages(gl, desc, dir, bufferViews);\n\n        const textures = this.parseTextures(gl, desc, images);\n\n        // Just pass through material data for now\n        const materials = this.parseMaterials(gl, desc, textures);\n\n        // Fetch the inverse bind matrices for skeleton joints\n        const skins = this.parseSkins(gl, desc, bufferViews);\n\n        // Create geometries for each mesh primitive\n        const meshes = this.parseMeshes(gl, desc, bufferViews, materials, skins);\n\n        // Create transforms, meshes and hierarchy\n        const nodes = this.parseNodes(gl, desc, meshes, skins);\n\n        // Place nodes in skeletons\n        this.populateSkins(skins, nodes);\n\n        // Create animation handlers\n        const animations = this.parseAnimations(gl, desc, nodes, bufferViews);\n\n        // Get top level nodes for each scene\n        const scenes = this.parseScenes(desc, nodes);\n        const scene = scenes[desc.scene];\n\n        // Remove null nodes (instanced transforms)\n        for (let i = nodes.length; i >= 0; i--) if (!nodes[i]) nodes.splice(i, 1);\n\n        return {\n            json: desc,\n            buffers,\n            bufferViews,\n            images,\n            textures,\n            materials,\n            meshes,\n            nodes,\n            animations,\n            scenes,\n            scene,\n        };\n    }\n\n    static async parseDesc(src) {\n        if (!src.match(/\\.glb/)) {\n            return await fetch(src).then((res) => res.json());\n        } else {\n            return await fetch(src)\n                .then((res) => res.arrayBuffer())\n                .then((glb) => this.unpackGLB(glb));\n        }\n    }\n\n    // From https://github.com/donmccurdy/glTF-Transform/blob/e4108cc/packages/core/src/io/io.ts#L32\n    static unpackGLB(glb) {\n        // Decode and verify GLB header.\n        const header = new Uint32Array(glb, 0, 3);\n        if (header[0] !== 0x46546c67) {\n            throw new Error('Invalid glTF asset.');\n        } else if (header[1] !== 2) {\n            throw new Error(`Unsupported glTF binary version, \"${header[1]}\".`);\n        }\n        // Decode and verify chunk headers.\n        const jsonChunkHeader = new Uint32Array(glb, 12, 2);\n        const jsonByteOffset = 20;\n        const jsonByteLength = jsonChunkHeader[0];\n        if (jsonChunkHeader[1] !== 0x4e4f534a) {\n            throw new Error('Unexpected GLB layout.');\n        }\n\n        // Decode JSON.\n        const jsonText = new TextDecoder().decode(glb.slice(jsonByteOffset, jsonByteOffset + jsonByteLength));\n        const json = JSON.parse(jsonText);\n        // JSON only\n        if (jsonByteOffset + jsonByteLength === glb.byteLength) return json;\n\n        const binaryChunkHeader = new Uint32Array(glb, jsonByteOffset + jsonByteLength, 2);\n        if (binaryChunkHeader[1] !== 0x004e4942) {\n            throw new Error('Unexpected GLB layout.');\n        }\n        // Decode content.\n        const binaryByteOffset = jsonByteOffset + jsonByteLength + 8;\n        const binaryByteLength = binaryChunkHeader[0];\n        const binary = glb.slice(binaryByteOffset, binaryByteOffset + binaryByteLength);\n        // Attach binary to buffer\n        json.buffers[0].binary = binary;\n        return json;\n    }\n\n    // Threejs GLTF Loader https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js#L1085\n    static resolveURI(uri, dir) {\n        // Invalid URI\n        if (typeof uri !== 'string' || uri === '') return '';\n\n        // Host Relative URI\n        if (/^https?:\\/\\//i.test(dir) && /^\\//.test(uri)) {\n            dir = dir.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URI http://, https://, //\n        if (/^(https?:)?\\/\\//i.test(uri)) return uri;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(uri)) return uri;\n\n        // Blob URI\n        if (/^blob:.*$/i.test(uri)) return uri;\n\n        // Relative URI\n        return dir + uri;\n    }\n\n    static async loadBuffers(desc, dir) {\n        if (!desc.buffers) return null;\n        return await Promise.all(\n            desc.buffers.map((buffer) => {\n                // For GLB, binary buffer ready to go\n                if (buffer.binary) return buffer.binary;\n                const uri = this.resolveURI(buffer.uri, dir);\n                return fetch(uri).then((res) => res.arrayBuffer());\n            })\n        );\n    }\n\n    static parseBufferViews(gl, desc, buffers) {\n        if (!desc.bufferViews) return null;\n        // Clone to leave description pure\n        const bufferViews = desc.bufferViews.map((o) => Object.assign({}, o));\n\n        desc.meshes &&\n            desc.meshes.forEach(({ primitives }) => {\n                primitives.forEach(({ attributes, indices }) => {\n                    // Flag bufferView as an attribute, so it knows to create a gl buffer\n                    for (let attr in attributes) bufferViews[desc.accessors[attributes[attr]].bufferView].isAttribute = true;\n\n                    if (indices === undefined) return;\n                    bufferViews[desc.accessors[indices].bufferView].isAttribute = true;\n\n                    // Make sure indices bufferView have a target property for gl buffer binding\n                    bufferViews[desc.accessors[indices].bufferView].target = gl.ELEMENT_ARRAY_BUFFER;\n                });\n            });\n\n        // Get componentType of each bufferView from the accessors\n        desc.accessors.forEach(({ bufferView: i, componentType }) => {\n            bufferViews[i].componentType = componentType;\n        });\n\n        // Get mimetype of bufferView from images\n        desc.images &&\n            desc.images.forEach(({ uri, bufferView: i, mimeType }) => {\n                if (i === undefined) return;\n                bufferViews[i].mimeType = mimeType;\n            });\n\n        // Push each bufferView to the GPU as a separate buffer\n        bufferViews.forEach(\n            (\n                {\n                    buffer: bufferIndex, // required\n                    byteOffset = 0, // optional\n                    byteLength, // required\n                    byteStride, // optional\n                    target = gl.ARRAY_BUFFER, // optional, added above for elements\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n\n                    componentType, // optional, added from accessor above\n                    mimeType, // optional, added from images above\n                    isAttribute,\n                },\n                i\n            ) => {\n                const TypeArray = TYPE_ARRAY[componentType || mimeType];\n                const elementBytes = TypeArray.BYTES_PER_ELEMENT;\n\n                const data = new TypeArray(buffers[bufferIndex], byteOffset, byteLength / elementBytes);\n                bufferViews[i].data = data;\n                bufferViews[i].originalBuffer = buffers[bufferIndex];\n\n                if (!isAttribute) return;\n                // Create gl buffers for the bufferView, pushing it to the GPU\n                const buffer = gl.createBuffer();\n                gl.bindBuffer(target, buffer);\n                gl.renderer.state.boundBuffer = buffer;\n                gl.bufferData(target, data, gl.STATIC_DRAW);\n                bufferViews[i].buffer = buffer;\n            }\n        );\n\n        return bufferViews;\n    }\n\n    static parseImages(gl, desc, dir, bufferViews) {\n        if (!desc.images) return null;\n        return desc.images.map(({ uri, bufferView: bufferViewIndex, mimeType, name }) => {\n            const image = new Image();\n            image.name = name;\n            if (uri) {\n                image.src = this.resolveURI(uri, dir);\n            } else if (bufferViewIndex !== undefined) {\n                const { data } = bufferViews[bufferViewIndex];\n                const blob = new Blob([data], { type: mimeType });\n                image.src = URL.createObjectURL(blob);\n            }\n            image.ready = new Promise((res) => {\n                image.onload = () => res();\n            });\n            return image;\n        });\n    }\n\n    static parseTextures(gl, desc, images) {\n        if (!desc.textures) return null;\n        return desc.textures.map(({ sampler: samplerIndex, source: sourceIndex, name, extensions, extras }) => {\n            const options = {\n                flipY: false,\n                wrapS: gl.REPEAT, // Repeat by default, opposed to OGL's clamp by default\n                wrapT: gl.REPEAT,\n            };\n            const sampler = samplerIndex !== undefined ? desc.samplers[samplerIndex] : null;\n            if (sampler) {\n                ['magFilter', 'minFilter', 'wrapS', 'wrapT'].forEach((prop) => {\n                    if (sampler[prop]) options[prop] = sampler[prop];\n                });\n            }\n            const texture = new Texture(gl, options);\n            texture.name = name;\n            const image = images[sourceIndex];\n            image.ready.then(() => (texture.image = image));\n\n            return texture;\n        });\n    }\n\n    static parseMaterials(gl, desc, textures) {\n        if (!desc.materials) return null;\n        return desc.materials.map(\n            ({\n                name,\n                extensions,\n                extras,\n                pbrMetallicRoughness = {},\n                normalTexture,\n                occlusionTexture,\n                emissiveTexture,\n                emissiveFactor = [0, 0, 0],\n                alphaMode = 'OPAQUE',\n                alphaCutoff = 0.5,\n                doubleSided = false,\n            }) => {\n                const {\n                    baseColorFactor = [1, 1, 1, 1],\n                    baseColorTexture,\n                    metallicFactor = 1,\n                    roughnessFactor = 1,\n                    metallicRoughnessTexture,\n                    //   extensions,\n                    //   extras,\n                } = pbrMetallicRoughness;\n\n                if (baseColorTexture) {\n                    baseColorTexture.texture = textures[baseColorTexture.index];\n                    // texCoord\n                }\n                if (normalTexture) {\n                    normalTexture.texture = textures[normalTexture.index];\n                    // scale: 1\n                    // texCoord\n                }\n                if (metallicRoughnessTexture) {\n                    metallicRoughnessTexture.texture = textures[metallicRoughnessTexture.index];\n                    // texCoord\n                }\n                if (occlusionTexture) {\n                    occlusionTexture.texture = textures[occlusionTexture.index];\n                    // strength 1\n                    // texCoord\n                }\n                if (emissiveTexture) {\n                    emissiveTexture.texture = textures[emissiveTexture.index];\n                    // texCoord\n                }\n\n                return {\n                    name,\n                    baseColorFactor,\n                    baseColorTexture,\n                    metallicFactor,\n                    roughnessFactor,\n                    metallicRoughnessTexture,\n                    normalTexture,\n                    occlusionTexture,\n                    emissiveTexture,\n                    emissiveFactor,\n                    alphaMode,\n                    alphaCutoff,\n                    doubleSided,\n                };\n            }\n        );\n    }\n\n    static parseSkins(gl, desc, bufferViews) {\n        if (!desc.skins) return null;\n        return desc.skins.map(\n            ({\n                inverseBindMatrices, // optional\n                skeleton, // optional\n                joints, // required\n                // name,\n                // extensions,\n                // extras,\n            }) => {\n                return {\n                    inverseBindMatrices: this.parseAccessor(inverseBindMatrices, desc, bufferViews),\n                    skeleton,\n                    joints,\n                };\n            }\n        );\n    }\n\n    static parseMeshes(gl, desc, bufferViews, materials, skins) {\n        if (!desc.meshes) return null;\n        return desc.meshes.map(\n            (\n                {\n                    primitives, // required\n                    weights, // optional\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n                },\n                meshIndex\n            ) => {\n                // TODO: weights stuff ?\n                // Parse through nodes to see how many instances there are\n                // and if there is a skin attached\n                let numInstances = 0;\n                let skinIndex = false;\n                desc.nodes &&\n                    desc.nodes.forEach(({ mesh, skin }) => {\n                        if (mesh === meshIndex) {\n                            numInstances++;\n                            if (skin !== undefined) skinIndex = skin;\n                        }\n                    });\n\n                primitives = this.parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances).map(({ geometry, program, mode }) => {\n                    // Create either skinned mesh or regular mesh\n                    const mesh =\n                        typeof skinIndex === 'number'\n                            ? new GLTFSkin(gl, { skeleton: skins[skinIndex], geometry, program, mode })\n                            : new Mesh(gl, { geometry, program, mode });\n                    mesh.name = name;\n                    if (mesh.geometry.isInstanced) {\n                        // Tag mesh so that nodes can add their transforms to the instance attribute\n                        mesh.numInstances = numInstances;\n                        // Avoid incorrect culling for instances\n                        mesh.frustumCulled = false;\n                    }\n                    return mesh;\n                });\n\n                return {\n                    primitives,\n                    weights,\n                    name,\n                };\n            }\n        );\n    }\n\n    static parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances) {\n        return primitives.map(\n            ({\n                attributes, // required\n                indices, // optional\n                material: materialIndex, // optional\n                mode = 4, // optional\n                targets, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const geometry = new Geometry(gl);\n\n                // Add each attribute found in primitive\n                for (let attr in attributes) {\n                    geometry.addAttribute(ATTRIBUTES[attr], this.parseAccessor(attributes[attr], desc, bufferViews));\n                }\n\n                // Add index attribute if found\n                if (indices !== undefined) {\n                    geometry.addAttribute('index', this.parseAccessor(indices, desc, bufferViews));\n                }\n\n                // Add instanced transform attribute if multiple instances\n                if (numInstances > 1) {\n                    geometry.addAttribute('instanceMatrix', {\n                        instanced: 1,\n                        size: 16,\n                        data: new Float32Array(numInstances * 16),\n                    });\n                }\n\n                // TODO: materials\n                const program = new NormalProgram(gl);\n                if (materialIndex !== undefined) {\n                    program.gltfMaterial = materials[materialIndex];\n                }\n\n                return {\n                    geometry,\n                    program,\n                    mode,\n                };\n            }\n        );\n    }\n\n    static parseAccessor(index, desc, bufferViews) {\n        // TODO: init missing bufferView with 0s\n        // TODO: support sparse\n\n        const {\n            bufferView: bufferViewIndex, // optional\n            byteOffset = 0, // optional\n            componentType, // required\n            normalized = false, // optional\n            count, // required\n            type, // required\n            min, // optional\n            max, // optional\n            sparse, // optional\n            // name, // optional\n            // extensions, // optional\n            // extras, // optional\n        } = desc.accessors[index];\n\n        const {\n            data, // attached in parseBufferViews\n            originalBuffer, // attached in parseBufferViews\n            buffer, // replaced to be the actual GL buffer\n            byteOffset: bufferByteOffset = 0,\n            // byteLength, // applied in parseBufferViews\n            byteStride = 0,\n            target,\n            // name,\n            // extensions,\n            // extras,\n        } = bufferViews[bufferViewIndex];\n\n        const size = TYPE_SIZE[type];\n\n        // Parse data from joined buffers\n        const TypeArray = TYPE_ARRAY[componentType];\n        const elementBytes = data.BYTES_PER_ELEMENT;\n        const componentOffset = byteOffset / elementBytes;\n        const componentStride = byteStride / elementBytes;\n        const isInterleaved = !!byteStride && componentStride !== size;\n\n        // TODO: interleaved\n        const newData = isInterleaved ? data : new TypeArray(originalBuffer, byteOffset + bufferByteOffset, count * size);\n\n        // Return attribute data\n        return {\n            data: newData,\n            size,\n            type: componentType,\n            normalized,\n            buffer,\n            stride: byteStride,\n            offset: byteOffset,\n            count,\n            min,\n            max,\n        };\n    }\n\n    static parseNodes(gl, desc, meshes, skins) {\n        if (!desc.nodes) return null;\n        const nodes = desc.nodes.map(\n            ({\n                camera, // optional\n                children, // optional\n                skin: skinIndex, // optional\n                matrix, // optional\n                mesh: meshIndex, // optional\n                rotation, // optional\n                scale, // optional\n                translation, // optional\n                weights, // optional\n                name, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const node = new Transform();\n                if (name) node.name = name;\n\n                // Apply transformations\n                if (matrix) {\n                    node.matrix.copy(matrix);\n                    node.decompose();\n                } else {\n                    if (rotation) node.quaternion.copy(rotation);\n                    if (scale) node.scale.copy(scale);\n                    if (translation) node.position.copy(translation);\n                    node.updateMatrix();\n                }\n\n                // Flags for avoiding duplicate transforms and removing unused instance nodes\n                let isInstanced = false;\n                let isFirstInstance = true;\n\n                // add mesh if included\n                if (meshIndex !== undefined) {\n                    meshes[meshIndex].primitives.forEach((mesh) => {\n                        if (mesh.geometry.isInstanced) {\n                            isInstanced = true;\n                            if (!mesh.instanceCount) {\n                                mesh.instanceCount = 0;\n                            } else {\n                                isFirstInstance = false;\n                            }\n                            node.matrix.toArray(mesh.geometry.attributes.instanceMatrix.data, mesh.instanceCount * 16);\n                            mesh.instanceCount++;\n\n                            if (mesh.instanceCount === mesh.numInstances) {\n                                // Remove properties once all instances added\n                                delete mesh.numInstances;\n                                delete mesh.instanceCount;\n                                // Flag attribute as dirty\n                                mesh.geometry.attributes.instanceMatrix.needsUpdate = true;\n                            }\n                        }\n\n                        // For instances, only the first node will actually have the mesh\n                        if (isInstanced) {\n                            if (isFirstInstance) mesh.setParent(node);\n                        } else {\n                            mesh.setParent(node);\n                        }\n                    });\n                }\n\n                // Reset node if instanced to not duplicate transforms\n                if (isInstanced) {\n                    // Remove unused nodes just providing an instance transform\n                    if (!isFirstInstance) return null;\n                    // Avoid duplicate transform for node containing the instanced mesh\n                    node.matrix.identity();\n                    node.decompose();\n                }\n\n                return node;\n            }\n        );\n\n        desc.nodes.forEach(({ children = [] }, i) => {\n            // Set hierarchy now all nodes created\n            children.forEach((childIndex) => {\n                if (!nodes[childIndex]) return;\n                nodes[childIndex].setParent(nodes[i]);\n            });\n        });\n\n        return nodes;\n    }\n\n    static populateSkins(skins, nodes) {\n        if (!skins) return;\n        skins.forEach((skin) => {\n            skin.joints = skin.joints.map((i, index) => {\n                const joint = nodes[i];\n                joint.bindInverse = new Mat4(...skin.inverseBindMatrices.data.slice(index * 16, (index + 1) * 16));\n                return joint;\n            });\n            if (skin.skeleton) skin.skeleton = nodes[skin.skeleton];\n        });\n    }\n\n    static parseAnimations(gl, desc, nodes, bufferViews) {\n        if (!desc.animations) return null;\n        return desc.animations.map(\n            ({\n                channels, // required\n                samplers, // required\n                name, // optional\n                // extensions, // optional\n                // extras,  // optional\n            }) => {\n                const data = channels.map(\n                    ({\n                        sampler: samplerIndex, // required\n                        target, // required\n                        // extensions, // optional\n                        // extras, // optional\n                    }) => {\n                        const {\n                            input: inputIndex, // required\n                            interpolation = 'LINEAR',\n                            output: outputIndex, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = samplers[samplerIndex];\n\n                        const {\n                            node: nodeIndex, // optional - TODO: when is it not included?\n                            path, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = target;\n\n                        const node = nodes[nodeIndex];\n                        const transform = TRANSFORMS[path];\n                        const times = this.parseAccessor(inputIndex, desc, bufferViews).data;\n                        const values = this.parseAccessor(outputIndex, desc, bufferViews).data;\n\n                        return {\n                            node,\n                            transform,\n                            interpolation,\n                            times,\n                            values,\n                        };\n                    }\n                );\n\n                return {\n                    name,\n                    animation: new GLTFAnimation(data),\n                };\n            }\n        );\n    }\n\n    static parseScenes(desc, nodes) {\n        if (!desc.scenes) return null;\n        return desc.scenes.map(\n            ({\n                nodes: nodesIndices = [],\n                name, // optional\n                extensions,\n                extras,\n            }) => {\n                return nodesIndices.reduce((map, i) => {\n                    // Don't add null nodes (instanced transforms)\n                    if (nodes[i]) map.push(nodes[i]);\n                    return map;\n                }, []);\n            }\n        );\n    }\n}\n","// Core\nexport { Geometry } from './core/Geometry.js';\nexport { Program } from './core/Program.js';\nexport { Renderer } from './core/Renderer.js';\nexport { Camera } from './core/Camera.js';\nexport { Transform } from './core/Transform.js';\nexport { Mesh } from './core/Mesh.js';\nexport { Texture } from './core/Texture.js';\nexport { RenderTarget } from './core/RenderTarget.js';\n\n// Maths\nexport { Color } from './math/Color.js';\nexport { Euler } from './math/Euler.js';\nexport { Mat3 } from './math/Mat3.js';\nexport { Mat4 } from './math/Mat4.js';\nexport { Quat } from './math/Quat.js';\nexport { Vec2 } from './math/Vec2.js';\nexport { Vec3 } from './math/Vec3.js';\nexport { Vec4 } from './math/Vec4.js';\n\n// Extras\nexport { Plane } from './extras/Plane.js';\nexport { Box } from './extras/Box.js';\nexport { Sphere } from './extras/Sphere.js';\nexport { Cylinder } from './extras/Cylinder.js';\nexport { Triangle } from './extras/Triangle.js';\nexport { Torus } from './extras/Torus.js';\nexport { Orbit } from './extras/Orbit.js';\nexport { Raycast } from './extras/Raycast.js';\nexport { Curve } from './extras/Curve.js';\nexport { Post } from './extras/Post.js';\nexport { Skin } from './extras/Skin.js';\nexport { Animation } from './extras/Animation.js';\nexport { Text } from './extras/Text.js';\nexport { NormalProgram } from './extras/NormalProgram.js';\nexport { Flowmap } from './extras/Flowmap.js';\nexport { GPGPU } from './extras/GPGPU.js';\nexport { Polyline } from './extras/Polyline.js';\nexport { Shadow } from './extras/Shadow.js';\nexport { KTXTexture } from './extras/KTXTexture.js';\nexport { TextureLoader } from './extras/TextureLoader.js';\nexport { GLTFLoader } from './extras/GLTFLoader.js';\nexport { GLTFSkin } from './extras/GLTFSkin.js';\n","import {\r\n  Renderer,\r\n  Camera,\r\n  Transform,\r\n  Box,\r\n  Program,\r\n  Mesh,\r\n  Orbit,\r\n  Plane,\r\n  Sphere,\r\n  Cylinder,\r\n} from \"ogl\";\r\n\r\nconst vertex = /* glsl */ `\r\n    attribute vec3 position;\r\n    attribute vec3 normal;\r\n    uniform mat4 modelViewMatrix;\r\n    uniform mat4 projectionMatrix;\r\n    uniform mat3 normalMatrix;\r\n    varying vec3 vNormal;\r\n    void main() {\r\n        vNormal = normalize(normalMatrix * normal);\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    }\r\n`;\r\n\r\nconst fragment = /* glsl */ `\r\n    precision highp float;\r\n    varying vec3 vNormal;\r\n    void main() {\r\n        vec3 normal = normalize(vNormal);\r\n        float lighting = dot(normal, normalize(vec3(-0.3, 0.8, 0.6)));\r\n        gl_FragColor.rgb = vec3(0.2, 0.8, 1.0) + lighting * 0.1;\r\n        gl_FragColor.a = 1.0;\r\n    }\r\n`;\r\n\r\n{\r\n  const renderer = new Renderer({ dpr: 3 });\r\n  const gl = renderer.gl;\r\n  document.body.appendChild(gl.canvas);\r\n  gl.clearColor(1, 1, 1, 1);\r\n\r\n  const camera = new Camera(gl, { fov: 35 });\r\n  camera.position.set(0, 1, 7);\r\n  camera.lookAt([0, 0, 0]);\r\n  const controls = new Orbit(camera);\r\n\r\n  function resize() {\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    camera.perspective({ aspect: gl.canvas.width / gl.canvas.height });\r\n  }\r\n  window.addEventListener(\"resize\", resize, false);\r\n  resize();\r\n\r\n  const scene = new Transform();\r\n\r\n  const planeGeometry = new Plane(gl);\r\n  const sphereGeometry = new Sphere(gl);\r\n  const cubeGeometry = new Box(gl);\r\n  const cylinderGeometry = new Cylinder(gl);\r\n\r\n  const program = new Program(gl, {\r\n    vertex,\r\n    fragment,\r\n\r\n    // Don't cull faces so that plane is double sided - default is gl.BACK\r\n    cullFace: null,\r\n  });\r\n\r\n  const plane = new Mesh(gl, { geometry: planeGeometry, program });\r\n  plane.position.set(0, 1.3, 0);\r\n  plane.setParent(scene);\r\n\r\n  const sphere = new Mesh(gl, { geometry: sphereGeometry, program });\r\n  sphere.position.set(1.3, 0, 0);\r\n  sphere.setParent(scene);\r\n\r\n  const cube = new Mesh(gl, { geometry: cubeGeometry, program });\r\n  cube.position.set(0, -1.3, 0);\r\n  cube.setParent(scene);\r\n\r\n  const cylinder = new Mesh(gl, { geometry: cylinderGeometry, program });\r\n  cylinder.position.set(-1.3, 0, 0);\r\n  cylinder.setParent(scene);\r\n\r\n  requestAnimationFrame(update);\r\n  function update() {\r\n    requestAnimationFrame(update);\r\n    controls.update();\r\n\r\n    plane.rotation.y -= 0.02;\r\n    sphere.rotation.y -= 0.03;\r\n    cube.rotation.y -= 0.04;\r\n    cylinder.rotation.y -= 0.02;\r\n\r\n    renderer.render({ scene, camera });\r\n  }\r\n}\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}